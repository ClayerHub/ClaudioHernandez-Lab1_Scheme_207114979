#lang racket
;El TDA de los usuarios requiere del TDA de la fecha para ser elaborado

(require "aqui-se-registra-el-nombre-del-tda-fecha.rkt")
;Este TDA representa un usuario, donde se incluye el registro de fecha y el
;nombre de usuario. Estos datos seran guardados en una lista que lleve el mismo orden
;(fecha X (nombre-usuario) string)

;Funcion que guarda el registro de fecha y el usuario, y los guarda en una lista
(define (usuario fecha nombre-usuario)
  (list fecha nombre-usuario))

;Funcion que verifica si el formato de usuario esta correcto
(define (usuario? nombre-usuario)
  (if (list? nombre-usuario)
      (if(and(string? (cadr nombre-usuario)))#t
      #f)
  #f))

;Funcion que retorna la fecha de registro
(define (get-fecha-usuario fecha-registro)
  (if(usuario? fecha-registro)(car fecha-usuario)null))

;Funcion que retorna el nombre del usuario
(define (get-nombre-usuario nombre)
  (if(usuario? nombre)(cadr nombre)null))

;Funcion que retorna el primer usuario de la lista de usuarios
(define (car-lista-usuarios lista-usuarios)
  (if(list? lista-usuarios) (car lista-usuarios)null))

;Funcion que retorna los usuarios de la lista de usuarios, excepto el primero
(define (cdr-lista-usuarios lista-usuarios)
  (if(list? lista-usuarios) (cdr lista-usuarios)null))

